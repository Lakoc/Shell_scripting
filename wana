#! /bin/sh

#   IOS Projekt 1
#   Alexander Polok(xpolok03)
#   26.3.2019
#   wana - analyzator webovych logu

POSIXLY_CORRECT=yes
#################################################################################################

cutfilter ()
{
  filter=$(echo "$1" | awk '{$1=""}1'| awk '$1=$1')
}

checkdate ()
{ 
  chdate="$(echo "$1" | grep -E '(2[0-9]{3})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01]) (0[0-9]|1[0-9]|2[0123]):([012345][0-9]):([012345][0-9])')" 
  if [ -z "$chdate" ]; then
  >&2 echo "Bad input format (time)!"
  exit 1
  fi
}

checkip ()
{
  #Regex for ipv4 and ipv6 copied from: https://www.regextester.com/104038
  testip="$(echo "$1" | grep -E '((^\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\s*$)|(^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$))')"
  if [ -z "$testip" ]; then
  >&2 echo "Bad input format (ip)!"
  exit 1
  fi
}

casa ()
{
  printf "%s\n" "$log" | while read -r line; do
  if [ "$(printf '%s\n' "$line" | awk '{print substr ($4,2)}' | tr '/' ' ' | tr ':' ' ' | awk '{if($2=="Jan") $2="01"; if($2=="Feb") $2="02"; if($2=="Mar") $2="03"; if($2=="Apr") $2="04"; if($2=="May") $2="05"; if($2=="Jun") $2="06"; if($2=="Jul") $2="07"; if($2=="Aug") $2="08"; if($2=="Sep") $2="09"; if($2=="Oct") $2="10"; if($2=="Nov") $2="11"; if($2=="Dec") $2="12"}{print $3$2$1$4$5$6}')" -gt "$2" ]; then
  printf '%s\n' "$line"
  fi
  done
}

casb ()
{
  printf "%s\n" "$log" | while read -r line; do
  if [ "$(printf '%s\n' "$line" | awk '{print substr ($4,2)}' | tr '/' ' ' | tr ':' ' ' | awk '{if($2=="Jan") $2="01"; if($2=="Feb") $2="02"; if($2=="Mar") $2="03"; if($2=="Apr") $2="04"; if($2=="May") $2="05"; if($2=="Jun") $2="06"; if($2=="Jul") $2="07"; if($2=="Aug") $2="08"; if($2=="Sep") $2="09"; if($2=="Oct") $2="10"; if($2=="Nov") $2="11"; if($2=="Dec") $2="12"}{print $3$2$1$4$5$6}')" -lt "$2" ]; then
  printf '%s\n' "$line"
  fi
  done
}

urigr ()
{
  printf "%s\n" "$1" | while read -r line; do
  testuri="$(echo "$line" | awk '{if ($6 = /"GET/ || $6 = /"POST/ || $6 = /"HEAD/ || $6 = /"PUT/ || $6 = /"DELETE/ || $6 = /"CONNECT/ || $6 = /"OPTIONS/ || $6 = /"TRACE/ || $6 = /"PATCH/) {print $7}}' | grep -E "$2")"
  if [ -n "$testuri" ]; then
  printf '%s\n' "$line"
  fi
  done
}

hosts ()
{
  echo "$1" | while read -r line; do
  ip_print="$(host "$line" | awk '{print $5}')"
  while [ "$(echo "$ip_print" | wc -l | sed -e 's/^[ \t]*//')" != 1 ];do
  ip_print="$(echo "$ip_print" | sed '1d')"
  done
  if [ "$ip_print" = "3(NXDOMAIN)" ] || [ "$ip_print" = "2(SERVFAIL)" ] || [ "$ip_print" = "no" ];then
    echo "$line";else
    echo "$ip_print"
  fi
  done  
}

hist_make_ip ()
{
  printf "%s\n" "$log" | awk '{print $1}' | sort | uniq -c | awk '{r="";s=$1; while(s-- > 0) { r= r"#" } printf ("%s (%d): %s\n", $2, $1, r)}' | sort -V -k 2 -r
}

hist_make_time ()
{
  printf "%s\n" "$log" | awk '{print substr ($4,2)}' | tr '/' ' ' | tr ':' ' ' | awk '{if($2=="Jan") $2="01"; if($2=="Feb") $2="02"; if($2=="Mar") $2="03"; if($2=="Apr") $2="04"; if($2=="May") $2="05"; if($2=="Jun") $2="06"; if($2=="Jul") $2="07"; if($2=="Aug") $2="08"; if($2=="Sep") $2="09"; if($2=="Oct") $2="10"; if($2=="Nov") $2="11"; if($2=="Dec") $2="12"};{print $3"-"$2"-"$1" "$4}' | sort | uniq -c | awk '{r="";s=$1; while(s-- > 0) { r= r"#" } printf ("%s %s:00 (%d): %s\n", $2, $3, $1, r)}'
}


while [ "$#" -gt 0 ]; do
  case "$1" in
    -a) checkdate "$2"; timea="$(echo "$2" | tr -d '-' | tr -d ':' | tr -d ' ')"; filter="$filter$1 "; shift 2;;
    -b) checkdate "$2"; timeb="$(echo "$2" | tr -d '-' | tr -d ':' | tr -d ' ')"; filter="$filter$1 "; shift 2;;
    -ip) ipaddr="$2"; checkip "$2"; filter="$filter$1 "; shift 2;;
    -uri) uri="$2"; filter="$filter$1 "; shift 2;;

    list-ip | list-uri | list-hosts | hist-ip | hist-load) command=$1; shift 1; break;;

    -*) >&2 echo "Unknown filter: $1"; exit 1;;
    *) break;;
  esac
done

while [ "$1" ]; do
if [ -f "$1" ];then
:
else
test "$1" = "list-ip" && >&2 echo "Don't use $1 twice!" && exit 1
test "$1" = "list-uri" && >&2 echo "Don't use $1 twice!" && exit 1
test "$1" = "list-hosts" && >&2 echo "Don't use $1 twice!" && exit 1
test "$1" = "hist-ip" && >&2 echo "Don't use $1 twice!" && exit 1
test "$1" = "hist-load" && >&2 echo "Don't use $1 twice!" && exit 1
test -n "$1" && >&2 echo "File $1 doesn't exist!" && exit 1
fi
  case "$1" in     
    *.gz) log="$log
    $(gunzip -c "$1")";islog=1; shift 1;;
    *) log="$log
    $(cat "$1")";islog=1; shift 1;;   
  esac
done

log="$(printf "%s" "$log" | sed '1d' | sed -e 's/^[ \t]*//')"

if [ "$islog" != 1 ];then
log=$(cat)
fi

while [ -n "$filter" ]; do
    case "$filter" in
    -a*) log="$(casa "$log" "$timea")"; cutfilter "$filter";;

    -b*) log="$(casb "$log" "$timeb")"; cutfilter "$filter";;

    -ip*) log="$(printf "%s\n" "$log" | grep "$ipaddr")";cutfilter "$filter";;
    
    -uri*) log="$(urigr "$log" "$uri")"; cutfilter "$filter";;
    
    *) break;;
    esac
done

case "$command" in
  list-ip) printf "%s\n" "$log" | awk '{print $1}' | sort | uniq; exit 0;;

  list-uri) printf "%s\n" "$log" | awk '{if ($6 = /"GET/ || $6 = /"POST/ || $6 = /"HEAD/ || $6 = /"PUT/ || $6 = /"DELETE/ || $6 = /"CONNECT/ || $6 = /"OPTIONS/ || $6 = /"TRACE/ || $6 = /"PATCH/) {print $7}}'| sort | uniq | sed '/^[0-9]/ d'; exit 0;;

  list-hosts) hosts "$(printf "%s\n" "$log" | awk '{print $1}' | sort | uniq)"; exit 0;;

  hist-ip) hist_make_ip; exit 0;;

  hist-load) hist_make_time; exit 0;;
esac

printf "%s\n" "$log"; exit 0